<html>
<script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" ></script>
<script src="/socket.io/socket.io.js"></script>
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
<link rel="stylesheet" href="/seat-layout.css">
<script>  
	// jquery fire on ready
	$(document).ready(function() {
		// Seat toggle
		$('body').on("click", '.available, .selected', function(){
		    $(this).toggleClass("selected available");
	
		    const setSeat = $(this).attr('id');
		    const classes = $(this).attr('class').split(' ');
		    const option = classes.includes('selected') ? 'set' : 'unset';

		    // Emits
		    socket.emit('set-unset-seat', { roomId, setSeat, option });
		});
		
		// Access variables
		let roomId = "<%= roomId %>"

		// Socket events
		let socket = io.connect('http://localhost:7000/');

		socket.on('connect', function() {
			socket.emit('join-room', { roomId });
		});

		// ON get-seat
		socket.on('get-seat', function(details) {
			const { seats } = details;

			let domSeats = $(".seat");
			for (const [id, status] of Object.entries(seats)) {
				if (status === 'B') {
					$(domSeats[id-1]).addClass('booked').removeClass('available');
				}
			}
		});

		// Event triggered if seat hovered
		$('.seat.available').hover(
			// MouseIn
			function() {
		    	const classes = $(this).attr('class').split(' ');
				if (!classes.includes('available')) return;

				const hoverSeat = $(this).attr('id');

				// EMIT
				socket.emit('hover-seat', { roomId, hoverSeat, option: 'mouse-in'} );
			},

			// MouseOut
			function() {
				const hoverSeat = $(this).attr('id');

				// EMIT
				socket.emit('hover-seat', { roomId, hoverSeat, option: 'mouse-out'} );
			}
		);

		// ON hover-seat
		socket.on('hover-seat', function(details) {
			// Destructs
			const { initiatorId, hoverSeat, option } = details;
			
			// Returns if initiated from same socket
			if (initiatorId === socket.id) return;

			// Change class to else-booking, available depending on mouse-in or mouse-out operation
			let domSeats = $(".seat");
			if (option === 'mouse-in') {
				$(domSeats[hoverSeat-1]).addClass('else-booking').removeClass('available');
			} else {
				const classes = $(domSeats[hoverSeat-1]).attr('class').split(' ');
				
				if (!classes.includes('booked')) {
					$(domSeats[hoverSeat-1]).addClass('available');					
				}
				$(domSeats[hoverSeat-1]).removeClass('else-booking');
			}
		});

		// ON set-seat
		socket.on('set-unset-seat', function(details) {
			// Destructs
			const { initiatorId, setSeat, option } = details;

			// Returns if initiated from same socket
			if (initiatorId === socket.id) return;

			// Change class to booked
			let domSeats = $(".seat");
			if (option === 'set') {
				$(domSeats[setSeat-1]).addClass('booked').removeClass('available');

			} else {
				$(domSeats[setSeat-1]).addClass('available').removeClass('booked');
			}
		});
	});
</script>  
<body>

<div class="mt-5 ml-5 mr-5">
	<% let upperRoomId = roomId.toUpperCase() %>	
	<h2> Seat layout for <%= upperRoomId%> </h2>
</div>

<div class="seat available" style= "left: 5%"  id="1">1</div>
<div class="seat available" style= "left: 9%" id="2">2</div>
<div class="seat available" style= "left: 13%" id="3">3</div>
<div class="seat available" style= "left: 17%" id="4">4</div>
<div class="seat available" style= "left: 21%" id="5">5</div>

<div class="color-template available" style= "top: 40%" >Available</div>
<div class="color-template booked" style= "top: 50%" >Booked</div>
<div class="color-template hover1" style= "top: 60%" >Hover</div>
<div class="color-template selected" style= "top: 70%" >Selected By You</div>
<div class="color-template else-booking" style= "top: 80%" >Someone Is Booking</div>

</body>
</html>


